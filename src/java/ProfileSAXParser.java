
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;
import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;

/**
 * ProfileBySAX uses a ContentHandler to write the profile to an XML File. The
 * ContantHandler is passed to objects of inner classes that extend from
 * DefaulHandler. These classes write elements and attributes to the
 * ContentHandler as events are generated by the SAX parser.
 *
 */
public class ProfileSAXParser {

    public static void main(String[] args) {

        String ssn = "8606261111";

        try {
            // Create Parser
            SAXParserFactory saxpf = SAXParserFactory.newInstance();
            SAXParser saxp = saxpf.newSAXParser();

            //saxp.setProperty("http://xml.org/sax/features/validation", true);
            // Ensure namespace processing is on (the default)
            //saxp.setProperty("http://xml.org/sax/features/namespaces", true);
            saxp.parse("web/WEB-INF/employmentrecords.xml", new MyParser(ssn));

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    static class MyParser extends DefaultHandler {

        private String ssn = "";
        private boolean record = false;
        private boolean startRecording = false;

        public MyParser(String ssn) {
            this.ssn = ssn;
        }

        @Override
        public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException {
            if (record == true && qName.equals("employments")) {
                startRecording = true;
            }
            if (record == true && startRecording == true) {
                System.out.println("<" + qName + ">");
            }
        }

        @Override
        public void characters(char[] ch, int start, int length) throws SAXException {
            String string = new String(ch, start, length).trim();
            if (record == true && startRecording == true) {
                System.out.print(string);
            }
            if (string.equals(ssn)) {
                record = true;
            }

        }

        @Override
        public void endElement(String uri, String localName, String qName) throws SAXException {
            if (startRecording == true) {
                System.out.println("<" + qName + ">");
            }
            if (startRecording == true && qName.equals("employments")) {
                record = false;
                startRecording = false;
            }
        }

        @Override
        public void startDocument() throws SAXException {
            System.out.println("<startDocument>");
        }

        @Override
        public void endDocument() throws SAXException {
            System.out.println("<endDocument>");
        }
    }

}
